---
# ssh-copy-id root@hostname

# cloudstack-mgmt_deploy.yaml
# complete installation of cloudstack-management server

- hosts: cldstk_mgmt
  user: root
  #serial: 1
  vars_files:
    - ../vars_file.yml
  roles: 
    - cldstk-mgmt

  tasks:
    - name: Run Cloudstack DB Configuration scripts
      command: cloudstack-setup-databases cloud:{{ mysql_root_password }}@{{ master }} --deploy-as=root:{{ mysql_root_password }}

    - name: Run Cloudstack Setup scripts
      command: cloudstack-setup-management

    - name: Start cloudstack-management service
      action: service name=cloudstack-management state=started

    - name: Set cloudstack-management to start at boot time
      action: command chkconfig cloudstack-management on

    - name: Set ntp to start at boot time
      action: command chkconfig ntpd on

- hosts: cldstk_web
  user: root
  vars_files:
    - ../vars_file.yml
  roles: 
    - cldstk-mgmt

  tasks:
    - name: Run Cloudstack DB Configuration scripts
      command: cloudstack-setup-databases cloud:{{ mysql_root_password }}@{{ master }} -i {{ ansible_default_ipv4.address }}
      when: mgmt_primary != '{{ ansible_hostname }}' and mgmt_primary != '{{ ansible_fqdn }}'

    - name: Run Cloudstack Setup scripts
      command: cloudstack-setup-management
      when: mgmt_primary != '{{ ansible_hostname }}' and mgmt_primary != '{{ ansible_fqdn }}'

    - name: Start cloudstack-management service
      action: service name=cloudstack-management state=started
      when: mgmt_primary != '{{ ansible_hostname }}' and mgmt_primary != '{{ ansible_fqdn }}'

    - name: Set cloudstack-management to start at boot time
      action: command chkconfig cloudstack-management on
      when: mgmt_primary != '{{ ansible_hostname }}' and mgmt_primary != '{{ ansible_fqdn }}'

    - name: Set ntp to start at boot time
      action: command chkconfig ntpd on
      when: mgmt_primary != '{{ ansible_hostname }}' and mgmt_primary != '{{ ansible_fqdn }}'




